// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         BigInt    @id @default(autoincrement()) 
  email      String    
  password   String
  name       String
  role       String
  createdAt  DateTime  @default(now())
  lastOnline DateTime?
  image      String?
  region     Region   @relation(fields: [regionId], references: [id])
  regionId   BigInt 
  orders     Order[]
  sentMessages    Chat[] @relation("Sender")
  receivedMessages Chat[] @relation("Receiver")
  products   Product[]  
  comments   Coment[]   
  likes      User_like[] @relation("UserLikes")
}

model Region {
  id         BigInt    @id @default(autoincrement()) 
  name       String
  users     User[]
}

model Chat {
  id        BigInt   @id @default(autoincrement())
  fromId    BigInt   
  toId      BigInt   
  productId BigInt  
  text      String   
  time      DateTime @default(now())

  from    User   @relation("Sender", fields: [fromId], references: [id])
  to      User   @relation("Receiver", fields: [toId], references: [id])  
}

model Product {
  id              BigInt  @id @default(autoincrement())
  name            String
  categoryId      BigInt
  image           String?
  price           Float
  userId          BigInt
  colorId         Color[]
  new_old         Boolean
  deal_with_price Boolean
  type            String
  old_price       Float?
  desc            String
  available       BigInt
  discount        Int
  checked         Boolean
  comment         Coment[]
  star            Float?
  views           Int
  location        String?
  likes           Int
  like            User_like[]
  category        Category @relation(fields: [categoryId], references: [id])
  user            User     @relation(fields: [userId], references: [id])
}

model Color {
  id         BigInt    @id @default(autoincrement()) 
  name       String
  productId  BigInt     
  product    Product[]
}

model Category {
  id         BigInt    @id @default(autoincrement()) 
  name       String
  products        Product[]
}

model Coment {
  id         BigInt   @id @default(autoincrement())
  userId     BigInt
  productId  BigInt
  text       String
  star       Float

  user       User     @relation(fields: [userId], references: [id]) 
  product    Product  @relation(fields: [productId], references: [id])
}

model User_like {
  id         BigInt   @id @default(autoincrement())
  userId     BigInt
  productId  BigInt 
  user       User     @relation("UserLikes", fields: [userId], references: [id])
  product    Product  @relation(fields: [productId], references: [id])
}

model Order {
  id           BigInt   @id @default(autoincrement())
  productId    BigInt   
  userId       BigInt   
  prod_count   Int      
  ordered_time DateTime @default(now()) 

  user         User     @relation(fields: [userId], references: [id])
}

model WebInfo {
  id             BigInt   @id @default(autoincrement())
  phone          String   
  desc           String  
  email          String   
  telegram_link  String?  
  insta_link     String?  
  facebook_link  String?  
}
